/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LayoutRouteRouteImport } from './routes/_layout/route'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as EPermitUuidRouteImport } from './routes/e-permit/$uuid'
import { Route as LayoutSupervisorsRouteImport } from './routes/_layout/supervisors'
import { Route as LayoutQuotasRouteImport } from './routes/_layout/quotas'
import { Route as LayoutNotFoundRouteImport } from './routes/_layout/not-found'
import { Route as LayoutBlackHistoryRouteImport } from './routes/_layout/black-history'
import { Route as LayoutAuthoritiesRouteImport } from './routes/_layout/authorities'
import { Route as LayoutActivePermitsRouteImport } from './routes/_layout/active-permits'
import { Route as LayoutAccountantRouteImport } from './routes/_layout/accountant'
import { Route as LayoutUsersIndexRouteImport } from './routes/_layout/users/index'
import { Route as LayoutEPermitIndexRouteImport } from './routes/_layout/e-permit/index'
import { Route as LayoutCheckmarksIndexRouteImport } from './routes/_layout/checkmarks/index'
import { Route as LayoutUsersUuidRouteImport } from './routes/_layout/users/$uuid'
import { Route as LayoutCheckmarksUuidRouteImport } from './routes/_layout/checkmarks/$uuid'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRouteRoute = LayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const EPermitUuidRoute = EPermitUuidRouteImport.update({
  id: '/e-permit/$uuid',
  path: '/e-permit/$uuid',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutSupervisorsRoute = LayoutSupervisorsRouteImport.update({
  id: '/supervisors',
  path: '/supervisors',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutQuotasRoute = LayoutQuotasRouteImport.update({
  id: '/quotas',
  path: '/quotas',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutNotFoundRoute = LayoutNotFoundRouteImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutBlackHistoryRoute = LayoutBlackHistoryRouteImport.update({
  id: '/black-history',
  path: '/black-history',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutAuthoritiesRoute = LayoutAuthoritiesRouteImport.update({
  id: '/authorities',
  path: '/authorities',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutActivePermitsRoute = LayoutActivePermitsRouteImport.update({
  id: '/active-permits',
  path: '/active-permits',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutAccountantRoute = LayoutAccountantRouteImport.update({
  id: '/accountant',
  path: '/accountant',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutUsersIndexRoute = LayoutUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutEPermitIndexRoute = LayoutEPermitIndexRouteImport.update({
  id: '/e-permit/',
  path: '/e-permit/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutCheckmarksIndexRoute = LayoutCheckmarksIndexRouteImport.update({
  id: '/checkmarks/',
  path: '/checkmarks/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutUsersUuidRoute = LayoutUsersUuidRouteImport.update({
  id: '/users/$uuid',
  path: '/users/$uuid',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutCheckmarksUuidRoute = LayoutCheckmarksUuidRouteImport.update({
  id: '/checkmarks/$uuid',
  path: '/checkmarks/$uuid',
  getParentRoute: () => LayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/accountant': typeof LayoutAccountantRoute
  '/active-permits': typeof LayoutActivePermitsRoute
  '/authorities': typeof LayoutAuthoritiesRoute
  '/black-history': typeof LayoutBlackHistoryRoute
  '/not-found': typeof LayoutNotFoundRoute
  '/quotas': typeof LayoutQuotasRoute
  '/supervisors': typeof LayoutSupervisorsRoute
  '/e-permit/$uuid': typeof EPermitUuidRoute
  '/': typeof LayoutIndexRoute
  '/checkmarks/$uuid': typeof LayoutCheckmarksUuidRoute
  '/users/$uuid': typeof LayoutUsersUuidRoute
  '/checkmarks': typeof LayoutCheckmarksIndexRoute
  '/e-permit': typeof LayoutEPermitIndexRoute
  '/users': typeof LayoutUsersIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/accountant': typeof LayoutAccountantRoute
  '/active-permits': typeof LayoutActivePermitsRoute
  '/authorities': typeof LayoutAuthoritiesRoute
  '/black-history': typeof LayoutBlackHistoryRoute
  '/not-found': typeof LayoutNotFoundRoute
  '/quotas': typeof LayoutQuotasRoute
  '/supervisors': typeof LayoutSupervisorsRoute
  '/e-permit/$uuid': typeof EPermitUuidRoute
  '/': typeof LayoutIndexRoute
  '/checkmarks/$uuid': typeof LayoutCheckmarksUuidRoute
  '/users/$uuid': typeof LayoutUsersUuidRoute
  '/checkmarks': typeof LayoutCheckmarksIndexRoute
  '/e-permit': typeof LayoutEPermitIndexRoute
  '/users': typeof LayoutUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_layout/accountant': typeof LayoutAccountantRoute
  '/_layout/active-permits': typeof LayoutActivePermitsRoute
  '/_layout/authorities': typeof LayoutAuthoritiesRoute
  '/_layout/black-history': typeof LayoutBlackHistoryRoute
  '/_layout/not-found': typeof LayoutNotFoundRoute
  '/_layout/quotas': typeof LayoutQuotasRoute
  '/_layout/supervisors': typeof LayoutSupervisorsRoute
  '/e-permit/$uuid': typeof EPermitUuidRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/checkmarks/$uuid': typeof LayoutCheckmarksUuidRoute
  '/_layout/users/$uuid': typeof LayoutUsersUuidRoute
  '/_layout/checkmarks/': typeof LayoutCheckmarksIndexRoute
  '/_layout/e-permit/': typeof LayoutEPermitIndexRoute
  '/_layout/users/': typeof LayoutUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/accountant'
    | '/active-permits'
    | '/authorities'
    | '/black-history'
    | '/not-found'
    | '/quotas'
    | '/supervisors'
    | '/e-permit/$uuid'
    | '/'
    | '/checkmarks/$uuid'
    | '/users/$uuid'
    | '/checkmarks'
    | '/e-permit'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/accountant'
    | '/active-permits'
    | '/authorities'
    | '/black-history'
    | '/not-found'
    | '/quotas'
    | '/supervisors'
    | '/e-permit/$uuid'
    | '/'
    | '/checkmarks/$uuid'
    | '/users/$uuid'
    | '/checkmarks'
    | '/e-permit'
    | '/users'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/_layout/accountant'
    | '/_layout/active-permits'
    | '/_layout/authorities'
    | '/_layout/black-history'
    | '/_layout/not-found'
    | '/_layout/quotas'
    | '/_layout/supervisors'
    | '/e-permit/$uuid'
    | '/_layout/'
    | '/_layout/checkmarks/$uuid'
    | '/_layout/users/$uuid'
    | '/_layout/checkmarks/'
    | '/_layout/e-permit/'
    | '/_layout/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  EPermitUuidRoute: typeof EPermitUuidRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/e-permit/$uuid': {
      id: '/e-permit/$uuid'
      path: '/e-permit/$uuid'
      fullPath: '/e-permit/$uuid'
      preLoaderRoute: typeof EPermitUuidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/supervisors': {
      id: '/_layout/supervisors'
      path: '/supervisors'
      fullPath: '/supervisors'
      preLoaderRoute: typeof LayoutSupervisorsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/quotas': {
      id: '/_layout/quotas'
      path: '/quotas'
      fullPath: '/quotas'
      preLoaderRoute: typeof LayoutQuotasRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/not-found': {
      id: '/_layout/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof LayoutNotFoundRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/black-history': {
      id: '/_layout/black-history'
      path: '/black-history'
      fullPath: '/black-history'
      preLoaderRoute: typeof LayoutBlackHistoryRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/authorities': {
      id: '/_layout/authorities'
      path: '/authorities'
      fullPath: '/authorities'
      preLoaderRoute: typeof LayoutAuthoritiesRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/active-permits': {
      id: '/_layout/active-permits'
      path: '/active-permits'
      fullPath: '/active-permits'
      preLoaderRoute: typeof LayoutActivePermitsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/accountant': {
      id: '/_layout/accountant'
      path: '/accountant'
      fullPath: '/accountant'
      preLoaderRoute: typeof LayoutAccountantRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/users/': {
      id: '/_layout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/e-permit/': {
      id: '/_layout/e-permit/'
      path: '/e-permit'
      fullPath: '/e-permit'
      preLoaderRoute: typeof LayoutEPermitIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/checkmarks/': {
      id: '/_layout/checkmarks/'
      path: '/checkmarks'
      fullPath: '/checkmarks'
      preLoaderRoute: typeof LayoutCheckmarksIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/users/$uuid': {
      id: '/_layout/users/$uuid'
      path: '/users/$uuid'
      fullPath: '/users/$uuid'
      preLoaderRoute: typeof LayoutUsersUuidRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/checkmarks/$uuid': {
      id: '/_layout/checkmarks/$uuid'
      path: '/checkmarks/$uuid'
      fullPath: '/checkmarks/$uuid'
      preLoaderRoute: typeof LayoutCheckmarksUuidRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
  }
}

interface LayoutRouteRouteChildren {
  LayoutAccountantRoute: typeof LayoutAccountantRoute
  LayoutActivePermitsRoute: typeof LayoutActivePermitsRoute
  LayoutAuthoritiesRoute: typeof LayoutAuthoritiesRoute
  LayoutBlackHistoryRoute: typeof LayoutBlackHistoryRoute
  LayoutNotFoundRoute: typeof LayoutNotFoundRoute
  LayoutQuotasRoute: typeof LayoutQuotasRoute
  LayoutSupervisorsRoute: typeof LayoutSupervisorsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutCheckmarksUuidRoute: typeof LayoutCheckmarksUuidRoute
  LayoutUsersUuidRoute: typeof LayoutUsersUuidRoute
  LayoutCheckmarksIndexRoute: typeof LayoutCheckmarksIndexRoute
  LayoutEPermitIndexRoute: typeof LayoutEPermitIndexRoute
  LayoutUsersIndexRoute: typeof LayoutUsersIndexRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutAccountantRoute: LayoutAccountantRoute,
  LayoutActivePermitsRoute: LayoutActivePermitsRoute,
  LayoutAuthoritiesRoute: LayoutAuthoritiesRoute,
  LayoutBlackHistoryRoute: LayoutBlackHistoryRoute,
  LayoutNotFoundRoute: LayoutNotFoundRoute,
  LayoutQuotasRoute: LayoutQuotasRoute,
  LayoutSupervisorsRoute: LayoutSupervisorsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutCheckmarksUuidRoute: LayoutCheckmarksUuidRoute,
  LayoutUsersUuidRoute: LayoutUsersUuidRoute,
  LayoutCheckmarksIndexRoute: LayoutCheckmarksIndexRoute,
  LayoutEPermitIndexRoute: LayoutEPermitIndexRoute,
  LayoutUsersIndexRoute: LayoutUsersIndexRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  EPermitUuidRoute: EPermitUuidRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
