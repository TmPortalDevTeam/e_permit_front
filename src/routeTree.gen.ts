/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteRouteImport } from './routes/_layout/route'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutVisitorsRouteImport } from './routes/_layout/visitors'
import { Route as LayoutUsersRouteImport } from './routes/_layout/users'
import { Route as LayoutQuotasRouteImport } from './routes/_layout/quotas'
import { Route as LayoutEPermitRouteImport } from './routes/_layout/e-permit'
import { Route as LayoutCheckmarksRouteImport } from './routes/_layout/checkmarks'
import { Route as LayoutBlackHistoryRouteImport } from './routes/_layout/black-history'
import { Route as LayoutAuthoritiesRouteImport } from './routes/_layout/authorities'
import { Route as LayoutActivePermitsRouteImport } from './routes/_layout/active-permits'
import { Route as LayoutAccountantRouteImport } from './routes/_layout/accountant'

const LayoutRouteRoute = LayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutVisitorsRoute = LayoutVisitorsRouteImport.update({
  id: '/visitors',
  path: '/visitors',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutUsersRoute = LayoutUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutQuotasRoute = LayoutQuotasRouteImport.update({
  id: '/quotas',
  path: '/quotas',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutEPermitRoute = LayoutEPermitRouteImport.update({
  id: '/e-permit',
  path: '/e-permit',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutCheckmarksRoute = LayoutCheckmarksRouteImport.update({
  id: '/checkmarks',
  path: '/checkmarks',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutBlackHistoryRoute = LayoutBlackHistoryRouteImport.update({
  id: '/black-history',
  path: '/black-history',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutAuthoritiesRoute = LayoutAuthoritiesRouteImport.update({
  id: '/authorities',
  path: '/authorities',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutActivePermitsRoute = LayoutActivePermitsRouteImport.update({
  id: '/active-permits',
  path: '/active-permits',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutAccountantRoute = LayoutAccountantRouteImport.update({
  id: '/accountant',
  path: '/accountant',
  getParentRoute: () => LayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/accountant': typeof LayoutAccountantRoute
  '/active-permits': typeof LayoutActivePermitsRoute
  '/authorities': typeof LayoutAuthoritiesRoute
  '/black-history': typeof LayoutBlackHistoryRoute
  '/checkmarks': typeof LayoutCheckmarksRoute
  '/e-permit': typeof LayoutEPermitRoute
  '/quotas': typeof LayoutQuotasRoute
  '/users': typeof LayoutUsersRoute
  '/visitors': typeof LayoutVisitorsRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesByTo {
  '/accountant': typeof LayoutAccountantRoute
  '/active-permits': typeof LayoutActivePermitsRoute
  '/authorities': typeof LayoutAuthoritiesRoute
  '/black-history': typeof LayoutBlackHistoryRoute
  '/checkmarks': typeof LayoutCheckmarksRoute
  '/e-permit': typeof LayoutEPermitRoute
  '/quotas': typeof LayoutQuotasRoute
  '/users': typeof LayoutUsersRoute
  '/visitors': typeof LayoutVisitorsRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/_layout/accountant': typeof LayoutAccountantRoute
  '/_layout/active-permits': typeof LayoutActivePermitsRoute
  '/_layout/authorities': typeof LayoutAuthoritiesRoute
  '/_layout/black-history': typeof LayoutBlackHistoryRoute
  '/_layout/checkmarks': typeof LayoutCheckmarksRoute
  '/_layout/e-permit': typeof LayoutEPermitRoute
  '/_layout/quotas': typeof LayoutQuotasRoute
  '/_layout/users': typeof LayoutUsersRoute
  '/_layout/visitors': typeof LayoutVisitorsRoute
  '/_layout/': typeof LayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/accountant'
    | '/active-permits'
    | '/authorities'
    | '/black-history'
    | '/checkmarks'
    | '/e-permit'
    | '/quotas'
    | '/users'
    | '/visitors'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/accountant'
    | '/active-permits'
    | '/authorities'
    | '/black-history'
    | '/checkmarks'
    | '/e-permit'
    | '/quotas'
    | '/users'
    | '/visitors'
    | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/accountant'
    | '/_layout/active-permits'
    | '/_layout/authorities'
    | '/_layout/black-history'
    | '/_layout/checkmarks'
    | '/_layout/e-permit'
    | '/_layout/quotas'
    | '/_layout/users'
    | '/_layout/visitors'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/visitors': {
      id: '/_layout/visitors'
      path: '/visitors'
      fullPath: '/visitors'
      preLoaderRoute: typeof LayoutVisitorsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/users': {
      id: '/_layout/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/quotas': {
      id: '/_layout/quotas'
      path: '/quotas'
      fullPath: '/quotas'
      preLoaderRoute: typeof LayoutQuotasRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/e-permit': {
      id: '/_layout/e-permit'
      path: '/e-permit'
      fullPath: '/e-permit'
      preLoaderRoute: typeof LayoutEPermitRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/checkmarks': {
      id: '/_layout/checkmarks'
      path: '/checkmarks'
      fullPath: '/checkmarks'
      preLoaderRoute: typeof LayoutCheckmarksRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/black-history': {
      id: '/_layout/black-history'
      path: '/black-history'
      fullPath: '/black-history'
      preLoaderRoute: typeof LayoutBlackHistoryRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/authorities': {
      id: '/_layout/authorities'
      path: '/authorities'
      fullPath: '/authorities'
      preLoaderRoute: typeof LayoutAuthoritiesRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/active-permits': {
      id: '/_layout/active-permits'
      path: '/active-permits'
      fullPath: '/active-permits'
      preLoaderRoute: typeof LayoutActivePermitsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/accountant': {
      id: '/_layout/accountant'
      path: '/accountant'
      fullPath: '/accountant'
      preLoaderRoute: typeof LayoutAccountantRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
  }
}

interface LayoutRouteRouteChildren {
  LayoutAccountantRoute: typeof LayoutAccountantRoute
  LayoutActivePermitsRoute: typeof LayoutActivePermitsRoute
  LayoutAuthoritiesRoute: typeof LayoutAuthoritiesRoute
  LayoutBlackHistoryRoute: typeof LayoutBlackHistoryRoute
  LayoutCheckmarksRoute: typeof LayoutCheckmarksRoute
  LayoutEPermitRoute: typeof LayoutEPermitRoute
  LayoutQuotasRoute: typeof LayoutQuotasRoute
  LayoutUsersRoute: typeof LayoutUsersRoute
  LayoutVisitorsRoute: typeof LayoutVisitorsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutAccountantRoute: LayoutAccountantRoute,
  LayoutActivePermitsRoute: LayoutActivePermitsRoute,
  LayoutAuthoritiesRoute: LayoutAuthoritiesRoute,
  LayoutBlackHistoryRoute: LayoutBlackHistoryRoute,
  LayoutCheckmarksRoute: LayoutCheckmarksRoute,
  LayoutEPermitRoute: LayoutEPermitRoute,
  LayoutQuotasRoute: LayoutQuotasRoute,
  LayoutUsersRoute: LayoutUsersRoute,
  LayoutVisitorsRoute: LayoutVisitorsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
